---
# tasks file for cakephp
- name: Define secret's passwords
  run_once: true
  set_fact:
    database_password: "{{ database_password_definition }}"  
    cakephp_secret_token: "{{ cakephp_secret_token_definition }}"
    cakephp_security_salt: "{{ cakephp_security_salt_definition }}"
    github_webhook_secret: "{{ github_webhook_secret_definition }}" 
- name: Log in (obtain access token)
  k8s_auth:
    host: https://api.tale.ocpext.rhcee.support:6443
    validate_certs: no
    username: 
    password: 
  register: _auth_result
- name: Create {{ namespace }} namespace
  run_once: true
  k8s:
    api_key: "{{ _auth.k8s_auth.api_key }}"
    host: https://api.tale.ocpext.rhcee.support:6443
    api_version: v1
    ca_cert: ingress-ca.crt
    kind: Namespace
    name: "{{ namespace }}"
    state: "{{ cakephp_state }}"
- pause:
- name: Create Secret
  run_once: true
  k8s:
    api_version: v1
    state: "{{ cakephp_state }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ secret_name }}"
      stringData:
        cakephp-secret-token: "{{ cakephp_secret_token }}"
        cakephp-security-salt: "{{ cakephp_security_salt }}"
        database-password: "{{ database_password }}"
        database-user: "{{ database_user }}"
- name: Create Database Service 
  run_once: true
  k8s:
    api_version: v1
    state: "{{ cakephp_state }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        annotations:
          description: Exposes the database server
        name: "{{ database_service_name }}"
      spec:
        ports:
        - name: mysql
          port: 3306
          targetPort: 3306
        selector:
          name: "{{ database_service_name }}"
- name: Create Mysql DeploymentConfig
  run_once: true
  k8s:
    state: "{{ cakephp_state }}"
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'mysql-dc.yml') }}"
- name: Create CakePhP service
  run_once: true
  k8s:
    api_version: v1
    state: "{{ cakephp_state }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        annotations:
          description: Exposes and load balances the application pods
        name: "{{ cakephp_app_name }}"
      spec:
        ports:
        - name: web
          port: 8080
          targetPort: 8080
        selector:
          name: "{{ cakephp_app_name }}" 
- name: Create cakephp Image stream 
  run_once: true
  k8s:
    api_version: v1
    state: "{{ cakephp_state }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: ImageStream
      metadata:
        annotations:
          description: Keeps track of changes in the application image
        name: "{{ cakephp_app_name }}"
- name: Create cakephp Buildconfig
  run_once: true
  k8s:
    api_version: v1
    state: "{{ cakephp_state }}"
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'cakephp-buildconfig.yml') }}"
- name: Create Cakephp Deployment config
  run_once: true
  k8s:
    state: "{{ cakephp_state }}"
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'cakephp-dc.yml') }}"
- name: Create Cakephp entry Route
  run_once: true
  k8s:
    state: "{{ cakephp_state }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: Route
      metadata:
        name: "{{ cakephp_app_name }}"
      spec:
        to:
          kind: Service
          name: "{{ cakephp_app_name }}"
- name: "Waiting for Mysql Deployment to complete" 
#  run_once: true
#  oc_obj:
#    state: list
#    name: "{{ database_service_name }}"
#    namespace: "{{ namespace }}"
#    kind: dc
  k8s_facts:
    api_version: v1
    kind: DeploymentConfig
    namespace: "{{ namespace }}"
  register: _dc_output
  until:
    - _dc_output.resources[0].status is defined
    - _dc_output.resources[0].status.readyReplicas is defined
    - _dc_output.resources[0].status.readyReplicas > 0
#    - _dc_output.module_results.results[0].status is defined
#    - _dc_output.module_results.results[0].status.readyReplicas is defined
#    - _dc_output.module_results.results[0].status.readyReplicas > 0
  retries: 10
  delay: 20
- pause:
- name: "Waiting for CakePhP Deployment to complete" 
  run_once: true
  oc_obj:
    state: list
    name: "{{ cakephp_app_name }}"
    namespace: "{{ namespace }}"
    kind: dc
  register: _dc_output
  until:
    - _dc_output.module_results.results[0].status is defined
    - _dc_output.module_results.results[0].status.readyReplicas is defined
    - _dc_output.module_results.results[0].status.readyReplicas > 0
  retries: 10
  delay: 30
...
