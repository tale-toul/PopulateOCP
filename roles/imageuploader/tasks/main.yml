---
# tasks file for imageuploader
- name: Define secret's passwords
  run_once: true
  set_fact:
    github_webhook_secret: "{{ github_webhook_secret_definition }}" 
- name: Create {{ namespace }} namespace
  run_once: true
  k8s:
    api_version: v1
    kind: Namespace
    name: "{{ namespace }}"
    state: present
- name: Create Service 
  run_once: true
  k8s:
    api_version: v1
    state: present
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        annotations:
          description: Exposes the database server
        labels:
          app: "{{ imageuploader_app_name }}"
        name: "{{ imageuploader_app_name }}"
      spec:
        ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: 8443-tcp
          port: 8443
          protocol: TCP
          targetPort: 8443
        selector:
          app: "{{ imageuploader_app_name }}"
          deploymentconfig: "{{ imageuploader_app_name }}"
- name: Create {{ namespace }} PVC
  run_once: true
  k8s: 
    state: present
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "{{ imageuploader_app_name }}"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi 
- name: Create Image Uploader DeploymentConfig
  run_once: true
  k8s:
    state: present
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'imageuploader-dc.yml') }}"
- name: Create Image Uploader Image stream 
  run_once: true
  k8s:
    api_version: v1
    state: present
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: ImageStream
      metadata:
        annotations:
          description: Keeps track of changes in the application image
        name: "{{ imageuploader_app_name }}"
- name: Create  Image Uploader Buildconfig
  run_once: true
  k8s:
    api_version: v1
    state: present
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'imageuploader-bc.yml') }}"
- name: Create Image Uploader entry Route
  run_once: true
  k8s:
    state: present
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: Route
      metadata:
        name: "{{ imageuploader_app_name }}"
      spec:
        port:
          targetPort: 8080-tcp
        to:
          kind: Service
          name: "{{ imageuploader_app_name }}"

