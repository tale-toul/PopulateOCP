---
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: postgresql-gogs
  name: postgresql-gogs
spec:
  replicas: 1
  selector:
    app: postgresql-gogs
  strategy:
    recreateParams:
      timeoutSeconds: 600
    type: Recreate
  template:
    metadata:
      labels:
        app: postgresql-gogs
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          value: gogs
        - name: POSTGRESQL_PASSWORD
          value: "{{ gogs_postgresql_password }}"
        - name: POSTGRESQL_DATABASE
          value: gogs
        image: ' '
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
        name: postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE
              -c 'SELECT 1'
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgresql-data
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql-gogs
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - postgresql
      from:
        kind: ImageStreamTag
        name: postgresql:9.5
        namespace: openshift
    type: ImageChange
  - type: ConfigChange
...
