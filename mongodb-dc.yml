---
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    component: "{{ mongodb_application_name }}"
  name: "{{ mongodb_application_name }}"
spec:
  replicas: 1
  selector:
    name: "{{ mongodb_application_name }}"
  strategy:
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      labels:
        name: "{{ mongodb_application_name }}"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MONGODB_USER
          value: "{{ mongodb_user }}"
        - name: MONGODB_PASSWORD
          value: "{{ mongodb_password }}"
        - name: MONGODB_DATABASE
          value: "{{ mongodb_database }}"
        - name: MONGODB_ADMIN_PASSWORD
          value: "{{ mongodb_admin_password }}"
        image: ' '
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 27017
          timeoutSeconds: 1
        name: "{{ mongodb_application_name }}"
        ports:
        - containerPort: 27017
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 27017
          timeoutSeconds: 1
        resources:
          limits:
            memory: "{{ mongo_memory_limit }}"
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /var/lib/mongodb/data
          name: mongodb-data
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: mongodb-data
  test: false
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - "{{ mongodb_application_name }}"
      from:
        kind: ImageStreamTag
        name: mongodb:3.2
        namespace: openshift
    type: ImageChange
  - type: ConfigChange
...
